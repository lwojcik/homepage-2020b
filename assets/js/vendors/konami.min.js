/* Konami-JS ~ https://github.com/snaptortoise/konami-js */
var Konami=function(t){var o={t:function(t,i,n,e){if(t.addEventListener)t.addEventListener(i,n,false);else if(t.attachEvent){t["e"+i+n]=n;t[i+n]=function(){t["e"+i+n](window.event,e)};t.attachEvent("on"+i,t[i+n])}},input:"",pattern:"38384040373937396665",load:function(n){this.t(document,"keydown",function(t,i){if(i)o=i;o.input+=t?t.keyCode:event.keyCode;if(o.input.length>o.pattern.length)o.input=o.input.substr(o.input.length-o.pattern.length);if(o.input==o.pattern){o.code(n);o.input="";t.preventDefault();return false}},this);this.i.load(n);this.o.load(n)},code:function(t){window.location=t},o:{pattern:"121213131415141501",input:"",before:{},load:function(t){var i=o.o;i.link=t;i.o=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads:[];if(i.o){setTimeout(o.o.update,50)}},update:function(){function t(t){if(typeof t=="object"){return t.pressed}return t==1}var i=o.o;i.o=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads:[];for(var n=0;n<i.o.length;n++){var e=i.o[n];if(!e){continue}for(var n=0;n<20;n++){if(t(e.buttons[n])&&!i.before[e.index][n]){i.input+=n}}i.before[e.index]={};for(var n=0;n<20;n++){i.before[e.index][n]=t(e.buttons[n])}if(i.input.length>i.pattern.length){i.input=i.input.substr(i.input.length-i.pattern.length)}if(i.input==i.pattern){o.code(i.link);i.input=[]}}setTimeout(o.o.update,50)}},i:{u:0,s:0,h:0,v:0,g:false,capture:false,l:"",keys:["UP","UP","DOWN","DOWN","LEFT","RIGHT","LEFT","RIGHT","TAP","TAP"],code:function(t){o.code(t)},load:function(i){this.l=this.keys;o.t(document,"touchmove",function(t){if(t.touches.length==1&&o.i.capture==true){var i=t.touches[0];o.i.h=i.pageX;o.i.v=i.pageY;o.i.g=false;o.i.capture=false;o.i.p()}});o.t(document,"touchend",function(t){if(o.i.g==true)o.i.p(i)},false);o.t(document,"touchstart",function(t){o.i.u=t.changedTouches[0].pageX;o.i.s=t.changedTouches[0].pageY;o.i.g=true;o.i.capture=true})},p:function(t){x_magnitude=Math.abs(this.u-this.h);y_magnitude=Math.abs(this.s-this.v);x=this.u-this.h<0?"RIGHT":"LEFT";y=this.s-this.v<0?"DOWN":"UP";result=x_magnitude>y_magnitude?x:y;result=this.g==true?"TAP":result;if(result==this.keys[0])this.keys=this.keys.slice(1,this.keys.length);if(this.keys.length==0){this.keys=this.l;this.code(t)}}}};typeof t==="string"&&o.load(t);if(typeof t==="function"){o.code=t;o.load()}return o};